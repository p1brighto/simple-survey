{"version":3,"sources":["routes/survey.ts"],"names":[],"mappings":"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","file":"routes/survey.js","sourcesContent":["import express = require('express');\nimport passport = require('passport');\nvar router = express.Router();\n\n// db references\nimport mongoose = require('mongoose');\n\nimport surveyModel = require('../models/survey');\nimport Survey = surveyModel.Survey;\n\n// Authenticate user\nfunction requireAuth(req:express.Request, res:express.Response, next: any) {\n  if (!req.isAuthenticated()) {\n    return res.redirect('/login');\n  }\n  next();\n}\n\n// GET - show main survey page\nrouter.get('/',requireAuth, (req: express.Request, res: express.Response, next: any) => {\n  Survey.find(function(error, survey) {\n    if (error) {\n      console.log(error);\n      res.end(error);\n    } \n    else {\n      res.render('survey/index', {\n        title: 'Survey',\n        survey: survey,\n        displayName: req.user ? req.user.displayName : ''\n      });\n    }\n  });\n});\n\n// Choose type of survey you want to create\nrouter.get('/add', requireAuth, function(req: express.Request, res: express.Response, next: any) {\n  res.render('survey/add', {\n    title: 'Choose your type of survey',\n    displayName: req.user ? req.user.displayName : ''\n  });\n});\n\n// show add short questions page\nrouter.get('/shortquestions-add', requireAuth, function(req: express.Request, res: express.Response, next: any) {\n  res.render('survey/shortquestions-add', {\n    title: 'Add Short Questions',\n    displayName: req.user ? req.user.displayName : ''\n  });\n});\n\n// save short questions\nrouter.post('/shortquestions-add', function(req: express.Request, res: express.Response, next: any) {\n  Survey.create({\n    surveyTitle: req.body.surveyTitle,\n    surveyType: req.body.surveyType,\n    shortQuest1: req.body.shortQuest1,\n    shortQuest2: req.body.shortQuest2,\n    shortQuest3: req.body.shortQuest3,\n    shortQuest4: req.body.shortQuest4,\n    shortQuest5: req.body.shortQuest5,\n    isActive: req.body.isActive,\n    activeTill: req.body.activeTill,\n    displayName: req.body.displayName\n  }, function(error, Survey) {\n    // did we get back an error or valid Survey object?\n    if (error) {\n      console.log(error);\n      res.end(error);\n    }\n    else {\n      res.redirect('/dashboard');\n    }\n  })\n});\n\n// Display Edit Page - Short Questions\nrouter.get('/edit-shortquestions/:id', (req: express.Request, res: express.Response, next: any) => {\n  var id = req.params.id;\n  Survey.findById(id, (error, survey) => {\n    if (error) {\n      console.log(error);\n      res.end(error);\n    }\n    else {\n      res.render('survey/edit-shortquestions', {\n        title: 'Edit Short Questions',\n        survey: survey,\n        displayName: req.user ? req.user.displayName : ''\n      });\n    }\n  });\n});\n\n// Post Edits - Short Questions\nrouter.post('/edit-shortquestions/:id', (req: express.Request, res: express.Response, next: any) => {\n  // grab the id from the url parameter\n  var id = req.params.id;\n  // create and populate an survey object\n  var survey = new Survey({\n    _id: id,\n    surveyTitle: req.body.surveyTitle,\n    surveyType: req.body.surveyType,\n    shortQuest1: req.body.shortQuest1,\n    shortQuest2: req.body.shortQuest2,\n    shortQuest3: req.body.shortQuest3,\n    shortQuest4: req.body.shortQuest4,\n    shortQuest5: req.body.shortQuest5,\n    isActive: req.body.isActive,\n    activeTill: req.body.activeTill,\n    displayName: req.body.displayName\n  });\n  // run the update using mongoose and our model\n  Survey.update({ _id: id }, survey, (error) => {\n    if (error) {\n      console.log(error);\n      res.end(error);\n    }\n    else {\n      res.redirect('/survey');\n    }\n  });\n});\n\n// Multiple Choice Questions\n\n// Multiple choice questions page\nrouter.get('/multiplechoice-add', requireAuth, function(req: express.Request, res: express.Response, next: any) {\n  res.render('survey/multiplechoice-add', {\n    title: 'Add Multiple Choice Questions',\n    displayName: req.user ? req.user.displayName : ''\n  });\n});\n\n// Save multiple choice questions\nrouter.post('/multiplechoice-add', function(req: express.Request, res: express.Response, next: any) {\n  Survey.create({\n    surveyTitle: req.body.surveyTitle,\n    surveyType: req.body.surveyType,\n    shortQuest1: req.body.shortQuest1,\n    shortQuest2: req.body.shortQuest2,\n    shortQuest3: req.body.shortQuest3,\n    shortQuest4: req.body.shortQuest4,\n    shortQuest5: req.body.shortQuest5,\n    quest1Opt1: req.body.quest1Opt1,\n    quest1Opt2: req.body.quest1Opt2,\n    quest1Opt3: req.body.quest1Opt3,\n    quest1Opt4: req.body.quest1Opt4,\n    quest2Opt1: req.body.quest2Opt1,\n    quest2Opt2: req.body.quest2Opt2,\n    quest2Opt3: req.body.quest2Opt3,\n    quest2Opt4: req.body.quest2Opt4,\n    quest3Opt1: req.body.quest3Opt1,\n    quest3Opt2: req.body.quest3Opt2,\n    quest3Opt3: req.body.quest3Opt3,\n    quest3Opt4: req.body.quest3Opt4,\n    quest4Opt1: req.body.quest4Opt1,\n    quest4Opt2: req.body.quest4Opt2,\n    quest4Opt3: req.body.quest4Opt3,\n    quest4Opt4: req.body.quest4Opt4,\n    quest5Opt1: req.body.quest5Opt1,\n    quest5Opt2: req.body.quest5Opt2,\n    quest5Opt3: req.body.quest5Opt3,\n    quest5Opt4: req.body.quest5Opt4,\n    displayName: req.body.displayName\n  }, function(error, Survey) {\n    if (error) {\n      console.log(error);\n      res.end(error);\n    }\n    else {\n      res.redirect('/dashboard');\n    }\n  })\n});\n\n// Display Edit Page - Short Questions\nrouter.get('/edit-multiplechoice/:id', (req: express.Request, res: express.Response, next: any) => {\n  var id = req.params.id;\n  Survey.findById(id, (error, survey) => {\n    if (error) {\n      console.log(error);\n      res.end(error);\n    }\n    else {\n      res.render('survey/edit-multiplechoice', {\n        title: 'Edit Multiple Choice Questions',\n        survey: survey,\n        displayName: req.user ? req.user.displayName : ''\n      });\n    }\n  });\n});\n\n// Post Edits - Short Questions\nrouter.post('/edit-multiplechoice/:id', (req: express.Request, res: express.Response, next: any) => {\n  // grab the id from the url parameter\n  var id = req.params.id;\n  // create and populate an survey object\n  var survey = new Survey({\n    _id: id,\n    surveyTitle: req.body.surveyTitle,\n    surveyContent: req.body.surveyContent,\n    idName: req.body.idName\n  });\n  // run the update using mongoose and our model\n  Survey.update({ _id: id }, survey, (error) => {\n    if (error) {\n      console.log(error);\n      res.end(error);\n    }\n    else {\n      res.redirect('/survey');\n    }\n  });\n});\n\n// GET delete survey\nrouter.get('/delete/:id', (req: express.Request, res: express.Response, next: any) => {\n  // get the id from the url\n  var id = req.params.id;\n\n  // use the model and delete this record\n  Survey.remove({ _id: id }, (error) => {\n    if (error) {\n      console.log(error);\n      res.end(error);\n    }\n    else {\n      res.redirect('/survey');\n    }\n  });\n});\n\n// make this public\nmodule.exports = router;"],"sourceRoot":"/source/"}