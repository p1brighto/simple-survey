{"version":3,"sources":["routes/survey.ts"],"names":[],"mappings":"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","file":"routes/survey.js","sourcesContent":["import express = require('express');\r\nvar router = express.Router();\r\n\r\n// db references\r\nimport mongoose = require('mongoose');\r\nimport surveyModel = require('../models/survey');\r\n\r\nimport Survey = surveyModel.Survey;\r\n\r\n// GET - show main survey page\r\nrouter.get('/', (req: express.Request, res: express.Response, next: any) => {\r\n\r\n    // use the Survey model to query the Surveys collection\r\n    Survey.find(function(error, surveys) {\r\n        if (error) {\r\n            console.log(error);\r\n            res.end(error);\r\n        }\r\n        else {\r\n            // no error, we found a list of surveys\r\n            res.render('survey/index', {\r\n                title: 'Survey',\r\n                surveys: surveys,\r\n                displayName: req.user ? req.user.displayName : ''\r\n            });\r\n        }\r\n    });\r\n});\r\n\r\n// GET add page - show the blank form\r\nrouter.get('/add', function(req: express.Request, res: express.Response, next: any) {\r\n    res.render('survey/add', {\r\n        title: 'Add a New Survey'\r\n    });\r\n});\r\n\r\n// POST add page - save the new survey\r\nrouter.post('/add', function(req: express.Request, res: express.Response, next: any) {\r\n    Survey.create({\r\n        title: req.body.title,\r\n        content: req.body.content\r\n    }, function(error, Survey) {\r\n        // did we get back an error or valid Survey object?\r\n        if (error) {\r\n            console.log(error);\r\n            res.end(error);\r\n        }\r\n        else {\r\n            res.redirect('/survey');\r\n        }\r\n    })\r\n});\r\n\r\n// GET edit page - show the current survey in the form\r\nrouter.get('/:id', (req: express.Request, res: express.Response, next: any) => {\r\n\r\n    var id = req.params.id;\r\n\r\n    Survey.findById(id, (error, Survey) => {\r\n        if (error) {\r\n            console.log(error);\r\n            res.end(error);\r\n        }\r\n        else {\r\n            //show the edit view\r\n            res.render('survey/edit', {\r\n                title: 'Survey Details',\r\n                survey: Survey,\r\n                displayName: req.user ? req.user.displayName : ''\r\n            });\r\n        }\r\n    });\r\n});\r\n\r\n// POST edit page - update the selected survey\r\nrouter.post('/:id', (req: express.Request, res: express.Response, next: any) => {\r\n\r\n    // grab the id from the url parameter\r\n    var id = req.params.id;\r\n\r\n    // create and populate an survey object\r\n    var survey = new Survey({\r\n        _id: id,\r\n        title: req.body.title,\r\n        content: req.body.content\r\n    });\r\n\r\n    // run the update using mongoose and our model\r\n    Survey.update({ _id: id }, survey, (error) => {\r\n        if (error) {\r\n            console.log(error);\r\n            res.end(error);\r\n        }\r\n        else {\r\n            res.redirect('/survey');\r\n        }\r\n    });\r\n});\r\n\r\n// GET delete survey\r\nrouter.get('/delete/:id', (req: express.Request, res: express.Response, next: any) => {\r\n\r\n    // get the id from the url\r\n    var id = req.params.id;\r\n\r\n    // use the model and delete this record\r\n    Survey.remove({ _id: id }, (error) => {\r\n        if (error) {\r\n            console.log(error);\r\n            res.end(error);\r\n        }\r\n        else {\r\n            res.redirect('/survey');\r\n        }\r\n    });\r\n});\r\n\r\n// make this public\r\nmodule.exports = router;"],"sourceRoot":"/source/"}