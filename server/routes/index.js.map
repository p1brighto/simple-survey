{"version":3,"sources":["routes/index.ts"],"names":[],"mappings":"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","file":"routes/index.js","sourcesContent":["import express = require('express');\nvar sendgrid = require('sendgrid')('ACCOUNT_NAME', 'PASSWORD');\n\nimport passport = require('passport');\nvar router = express.Router();\n\n// db references\nimport userModel = require('../models/user');\nimport User = userModel.User;\n\nimport surveyModel = require('../models/survey');\nimport Survey = surveyModel.Survey;\n\n\nimport answerModel = require('../models/answer');\nimport Answer = answerModel.Answer;\n\n/* GET home page. */\nrouter.get('/', (req: express.Request, res: express.Response, next: any) => {\n  res.render('index', { \n    title: 'Home', \n    displayName: req.user ? req.user.displayName : '' });\n});\n\n/* GET about page. */\nrouter.get('/about-us', (req: express.Request, res: express.Response, next: any) => {\n  res.render('about-us', { \n    title: 'About-us',\n    displayName: req.user ? req.user.displayName : '' });\n});\n\n// Show surveys\nrouter.get('/browse-surveys', (req: express.Request, res: express.Response, next: any) => {\n  // use the Survey model to query the Surveys collection\n  Survey.find(function(error, survey) {\n    if (error) {\n      console.log(error);\n      res.end(error);\n    }\n    else {\n      // no error, we found a list of surveys\n      res.render('browse-surveys', {\n        title: 'Browse-surveys',\n        survey: survey,\n        displayName: req.user ? req.user.displayName : ''\n      });\n    }\n  });\n});\n\n/* GET Dashboard */\nrouter.get('/dashboard', (req: express.Request, res: express.Response, next: any) => {\n  // use the Survey model to query the Surveys collection\n  Survey.find(function(error, survey) {\n    if (error) {\n      console.log(error);\n      res.end(error);\n    }\n    else {\n      // no error, we found a list of surveys\n      res.render('dashboard', {\n        title: 'Dashboard',\n        survey: survey,\n        displayName: req.user ? req.user.displayName : ''\n      });\n    }\n  });\n});\n\n/* Get Results */\nrouter.get('/results', (req: express.Request, res: express.Response, next: any) => {\n  // use the Survey model to query the Surveys collection\n  Answer.find(function(error, answer) {\n    if (error) {\n      console.log(error);\n      res.end(error);\n    }\n    else {\n      // no error, we found a list of surveys\n      res.render('results', {\n        title: 'Results Listing',\n        answer: answer,\n        displayName: req.user ? req.user.displayName : ''\n      });\n    }\n  });\n});\n\nrouter.get('/results-view', (req: express.Request, res: express.Response, next: any) => {\n  // use the Survey model to query the Surveys collection\n  Answer.find(function(error, answer) {\n    if (error) {\n      console.log(error);\n      res.end(error);\n    }\n    else {\n      // no error, we found a list of surveys\n      res.render('results-view', {\n        title: 'Results Listing',\n        answer: answer,\n        displayName: req.user ? req.user.displayName : ''\n      });\n    }\n  });\n});\n\n\n/* GET contact page. */\nrouter.get('/contact-us', (req: express.Request, res: express.Response, next: any) => {\n  req.flash('successmessage', 'Your message has been submitted. We will get back to you shortly!');\n  req.flash('errormessage','Oops, something went wrong!');\n  res.render('contact-us', { \n    title: 'Contact-us',\n    messages: null,\n    displayName: req.user ? req.user.displayName : '' });\n});\n\n/* Email processing */\nrouter.post('/contact-us', (req: express.Request, res: express.Response, next: any) => {\n  sendgrid.send({\n    to: 'anoop.jeewoolall@gmail.com',\n    from: req.body.email,\n    subject: 'Simple Survey Contact Form',\n    text: \"This message has been sent from the contact form at [Simple Survey]\\r\\n\\r\\n\" +\n    \"Name: \" + req.body.name + \"\\r\\n\\r\\n\" +\n    \"Phone: \" + req.body.phone + \"\\r\\n\\r\\n\" +\n    req.body.message,\n    html: \"This message has been sent from the contact form at [Simple Survey]<br><br>\" +\n    \"<strong>Name:</strong> \" + req.body.name + \"<br><br>\" +\n    \"<strong>Phone:</strong> \" + req.body.phone + \"<br><br>\" +\n    req.body.message\n  },\n  (err, json) => {\n    if (err) { res.status(500).json('error'); \n  }\n  res.render('contact-us', { \n    title: 'Contact-us',\n    messages: req.flash('successmessage')\n  });\n\n});\n});\n\n/* Render Login Page */\nrouter.get('/login', (req:express.Request, res: express.Response, next:any) => {\n  if(!req.user) {\n    res.render('login', {\n      title: 'Login',\n      messages: req.flash('loginMessage'),\n      displayName: req.user ? req.user.displayName : ''\n    });\n    return;\n  } else {\n    return res.redirect('/dashboard');\n  }\n});\n\n/* Process Login Request */\nrouter.post('/login', passport.authenticate('local', {\n  successRedirect: '/dashboard',\n  failureRedirect: '/login',\n  failureFlash: true\n}));\n\n/* Render Password Reset page */\nrouter.get('/reset', (req:express.Request, res: express.Response, next:any) => {\n  if(req.user) {\n    res.render('reset', {\n      title: 'Reset',\n      displayName: req.user ? req.user.displayName : '' \n    });  \n  }\n  else {\n    return res.redirect('/login');\n  }\n});\n\n/* Process Password Reset Request */\nrouter.post('/reset',(req:express.Request, res: express.Response, next:any) => {\n  console.log(req.user.username);\n  User.findOne({'username':req.user.username}, (err, user) => {\n    user.setPassword(req.body.password, (err) =>{\n      if(err) {\n        console.log(err);\n        next(err);\n      } else {\n        user.save((err) =>{\n          if(err) {\n            console.log(err);\n          }\n\n          console.log('Password Changed');\n          res.redirect('/users');\n        });\n      }\n    }); \n  });\n});\n\n/* Render Registration page */\nrouter.get('/register', (req:express.Request, res: express.Response, next:any) => {\n  if(!req.user) {\n    res.render('register', {\n      title: 'Register',\n      messages: req.flash('registerMessage'),\n      displayName: req.user ? req.user.displayName : ''\n    });\n    return;\n  } else {\n    return res.redirect('/');\n  }\n});\n\n/* Process Registration Request */\nrouter.post('/register', (req:express.Request, res: express.Response, next:any) => {\n\n  // attempt to register user\n  User.register(new User(\n  { \n    firstName: req.body.firstName,\n    lastName: req.body.lastName,\n    phone: req.body.phone,\n    username: req.body.username,\n    displayName: req.body.displayName,\n    password: req.body.password,\n    email: req.body.email\n  }), req.body.password, (err) => {\n    if (err) {\n      console.log('Error Inserting New Data');\n      if (err.name == 'UserExistsError') {\n        req.flash('registerMessage', 'Registration Error: User Already Exists!');\n      }\n      return res.render('register', {\n        title: 'Register',\n        messages: req.flash('registerMessage'),\n        displayName: req.user ? req.user.displayName : ''\n      });\n    }\n      // if registration is successful\n      return passport.authenticate('local')(req, res, () => {\n        res.redirect('/users');\n      });\n    });\n});\n\n/* Process Logout Request */\nrouter.get('/logout', (req:express.Request, res: express.Response) => {\n  req.logOut();\n  res.redirect('/login');\n});\n\nmodule.exports = router;"],"sourceRoot":"/source/"}