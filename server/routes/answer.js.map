{"version":3,"sources":["routes/answer.ts"],"names":[],"mappings":"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","file":"routes/answer.js","sourcesContent":["import express = require('express');\nimport passport = require('passport');\nvar router = express.Router();\n\n// db references\nimport mongoose = require('mongoose');\n\nimport answerModel = require('../models/answer');\nimport Answer = answerModel.Answer;\n\nimport surveyModel = require('../models/survey');\nimport Survey = surveyModel.Survey;\n\n// GET - show main survey page\nrouter.get('/', (req: express.Request, res: express.Response, next: any) => {\n  // use the Survey model to query the Surveys collection\n  Answer.find(function(error, survey) {\n    if (error) {\n      console.log(error);\n      res.end(error);\n    } \n    else {\n      // no error, we found a list of surveys\n      res.render('survey/index', {\n        title: 'Survey',\n        survey: survey,\n        displayName: req.user ? req.user.displayName : ''\n      });\n    }\n  });\n});\n\n// Show page with survey options to create\nrouter.get('/add', function(req: express.Request, res: express.Response, next: any) {\n  res.render('survey/add', {\n    title: 'Choose your type of survey',\n    displayName: req.user ? req.user.displayName : ''\n  });\n});\n\n\nrouter.get('/:id', (req: express.Request, res: express.Response, next: any) => {\n  \n  var id = req.params.id;\n  Survey.findById(id, (error, survey) => {\n    if (error) {\n      console.log(error);\n      res.end(error);\n    }\n    else {\n      //show the edit view\n      res.render('answer/participate', {\n        title: 'Participate',\n        survey: survey,\n        displayName: req.user ? req.user.displayName : ''\n      });\n    }\n  });\n\n});\n\n// Post answer\nrouter.post('/:id', function(req: express.Request, res: express.Response, next: any) {\n  Answer.create({\n    surveyTitle: req.body.surveyTitle,\n    SurveyType: req.body.surveyType,\n    shortQuest1: req.body.shortAnswer1,\n    shortQuest2: req.body.shortAnswer2,\n    shortQuest3: req.body.shortAnswer3,\n    shortQuest4: req.body.shortAnswer4,\n    shortQuest5: req.body.shortAnswer5,\n    displayName: req.body.displayName\n  }, function(error, Answer) {\n    if (error) {\n      console.log(error);\n      res.end(error);\n    }\n    else {\n      res.redirect('/browse-surveys');\n    }\n  })\n});\n\n\n// GET add page - show the blank form\n/*router.get('/participate', function(req: express.Request, res: express.Response, next: any) {\n  res.render('answer/participate', {\n    title: 'Add Short Questions',\n    displayName: req.user ? req.user.displayName : ''\n  });\n});*/\n\n// POST add page - save the new survey\nrouter.post('/shortquestions-add', function(req: express.Request, res: express.Response, next: any) {\n  Answer.create({\n    surveyTitle: req.body.surveyTitle,\n    SurveyType: req.body.surveyType,\n    shortQuest1: req.body.shortQuest1,\n    shortQuest2: req.body.shortQuest2,\n    shortQuest3: req.body.shortQuest3,\n    shortQuest4: req.body.shortQuest4,\n    shortQuest5: req.body.shortQuest5,\n    displayName: req.body.displayName       \n  }, function(error, Answer) {\n    if (error) {\n      console.log(error);\n      res.end(error);\n    }\n    else {\n      res.redirect('/');\n    }\n  })\n});\n\n// make this public\nmodule.exports = router;"],"sourceRoot":"/source/"}